language: cpp
addons:
  apt:
    packages: &1
    - cmake
    - swig
    - libasound2-dev
    - libmagick++-dev
    - libunittest++-dev
    - libzmq3-dev
    - qtbase5-dev
    - qtmultimedia5-dev
    - doxygen
    - graphviz
    - curl
    - libfdk-aac-dev
    - libavcodec-dev
    - libavformat-dev
    - libavdevice-dev
    - libavutil-dev
    - libavfilter-dev
    - libswscale-dev
    - libpostproc-dev
    - libavresample-dev
    - libswresample-dev
cache: &common cache-x64
jobs:
  include:
  - name: FFmpeg 4 GCC (Ubuntu 18.04 Bionic)
    env:
    - BUILD_VERSION=ffmpeg4
    - CMAKE_EXTRA_ARGS="-DOpenShotAudio_ROOT=../cache-x64"
    - TEST_TARGET=test
    - LIBOPENSHOT_CACHE="cache-x64/lib/libopenshot-audio.so"
    os: linux
    dist: bionic
    compiler: gcc
    addons:
      apt:
        sources:
        - sourceline: ppa:beineri/opt-qt-5.12.3-bionic
        - sourceline: ppa:jonathonf/ffmpeg-4
        packages:
        - *1
        - qt5-default
        - libjsoncpp-dev
        - libavcodec58
        - libavformat58
        - libavdevice58
        - libavutil56
        - libavfilter7
        - libswscale5
        - libpostproc55
        - libavresample4
        - libswresample3
  - name: FFmpeg 3.4 Clang (Ubuntu 18.04 Bionic)
    env:
    - BUILD_VERSION=clang_ffmpeg34
    - CMAKE_EXTRA_ARGS="-DOpenShotAudio_ROOT=../cache-x64"
    - TEST_TARGET=test
    - LIBOPENSHOT_CACHE="cache-x64/lib/libopenshot-audio.so"
    os: linux
    dist: bionic
    compiler: clang
    addons:
      apt:
        sources:
        - sourceline: ppa:beineri/opt-qt-5.12.3-bionic
        packages:
        - *1
        - qt5-default
        - libomp-dev
  - name: macOS Latest
    env:
    - BUILD_VERSION=ffmpeg4
    - TEST_TARGET="test"
    - CMAKE_EXTRA_ARGS="-DOpenShotAudio_ROOT=../cache-x64"
    - Qt5_DIR=/usr/local/opt/qt5/lib/cmake/Qt5
    - LIBOPENSHOT_CACHE="cache-x64/lib/libopenshot-audio.dylib"
    - BREW_CACHE="$(brew --cache)"
    os: osx
    osx_image: xcode10.3
    compiler: clang
    addons:
      homebrew:
        update: true
        packages:
        - cmake
        - libomp
        - swig
        - unittest-cpp
        - rust
        - qt
        - imagemagick
        - libvpx
        - x264
        - x265
        - fdk-aac
        - fdk-aac-encoder
        - ffmpeg
        - zeromq
    cache:
      - *common
      - ${BREW_CACHE}
before_script:
  - mkdir build
  - if [ "x${TRAVIS_OS_NAME}" = "xosx" ]; then eval $(brew --env|grep -i cmake); fi
  - if [ \! -e "${LIBOPENSHOT_CACHE}" ]; then mkdir libopenshot-audio-build; pushd libopenshot-audio-build; cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../cache-x64 ../libopenshot-audio; cmake --build . -- VERBOSE=1; cmake --build . --target install -- VERBOSE=1; popd; fi
  - if [ "x${TRAVIS_OS_NAME}" = "xosx" ]; then git clone https://github.com/zeromq/cppzmq; cd cppzmq; cmake $(brew diy --verbose --name cppzmq --version $(sh ./version.sh)) -DENABLE_DRAFTS=0 .; cmake --build .; cmake --build . --target install; brew link --verbose cppzmq; cd ..; fi
script:
  - cd build
  - if [ "x${TRAVIS_OS_NAME}" = "xosx" ]; then echo "${CMAKE_EXTRA_ARGS}"; fi
  - cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=install-x64 ${CMAKE_EXTRA_ARGS} ../libopenshot
  - cmake --build . -- VERBOSE=1
  - cmake --build . --target ${TEST_TARGET} -- VERBOSE=1
  - cmake --build . --target install -- VERBOSE=1
  - cd ..
after_success:
  - cd build
  - tar cvpSf ../libopenshot-install-x64.tar install-x64
after_failure:
  - cat build/CMakeCache.txt
  - if [ "x${TRAVIS_OS_NAME}" = "xosx" ]; then brew config; brew doctor; fi

