language: cpp
compiler: gcc

# This section uses a rather esoteric (and tricky!) feature of YAML,
# &aliases and *anchors, to build package lists out of sublists without
# repeating their contents. Basically, '&name' creates an alias for the
# given data, which can then be referenced using the anchor '*name'.
addons:
  apt:
    packages: &p_common  # Packages common to all Ubuntu builds
    - cmake
    - swig
    - libopenshot-audio-dev
    - libmagick++-dev
    - libunittest++-dev
    - libzmq3-dev
    - qtbase5-dev
    - qtmultimedia5-dev
    - doxygen
    - graphviz
    - curl
    packages: &ff_common  # Common set of FFmpeg packages
    - *p_common
    - libfdk-aac-dev
    - libavcodec-dev
    - libavformat-dev
    - libavdevice-dev
    - libavutil-dev
    - libavfilter-dev
    - libswscale-dev
    - libpostproc-dev
    - libavresample-dev
    - libswresample-dev
  homebrew:
    packages:
      - gcc
      - swig
      - unittest-cpp
      - rust
      - qt
      - libomp
      - imagemagick
      - libvpx
      - x264
      - x265
      - fdk-aac
      - fdk-aac-encoder
      - ffmpeg

jobs:
  include:

    - name: "Coverage + FFmpeg 3.4 GCC (Ubuntu 18.04 Bionic)"
      env:
        - BUILD_VERSION=coverage_ffmpeg34
        - CMAKE_EXTRA_ARGS="-DENABLE_COVERAGE=1"
        - TEST_TARGET=coverage
      os: linux
      dist: bionic
      addons:
        apt:
          sources:
          - sourceline: 'ppa:openshot.developers/libopenshot-daily'
          - sourceline: 'ppa:beineri/opt-qt-5.12.3-bionic'
          packages:
          - *ff_common
          - qt5-default
          - libjsoncpp-dev
          - lcov
          - binutils-common # For c++filt

    - name: "FFmpeg 4 GCC (Ubuntu 18.04 Bionic)"
      env:
        - BUILD_VERSION=ffmpeg4
        - CMAKE_EXTRA_ARGS=""
        - TEST_TARGET=test
      os: linux
      dist: bionic
      addons:
        apt:
          sources:
          - sourceline: 'ppa:openshot.developers/libopenshot-daily'
          - sourceline: 'ppa:beineri/opt-qt-5.12.3-bionic'
          - sourceline: 'ppa:jonathonf/ffmpeg-4'
          packages:
          - *ff_common
          - qt5-default
          - libjsoncpp-dev
          - libavcodec58
          - libavformat58
          - libavdevice58
          - libavutil56
          - libavfilter7
          - libswscale5
          - libpostproc55
          - libavresample4
          - libswresample3

    - name: "FFmpeg 3.4 Clang (Ubuntu 18.04 Bionic)"
      env:
        - BUILD_VERSION=clang_ffmpeg34
        - CMAKE_EXTRA_ARGS=""
        - TEST_TARGET=test
      os: linux
      dist: bionic
      compiler: clang
      addons:
        apt:
          sources:
          - sourceline: 'ppa:openshot.developers/libopenshot-daily'
          - sourceline: 'ppa:beineri/opt-qt-5.12.3-bionic'
          packages:
          - *ff_common
          - qt5-default
          - libomp-dev

    - name: "FFmpeg 3.2 GCC (Ubuntu 16.04 Xenial)"
      env:
        - BUILD_VERSION=ffmpeg32
        - CMAKE_EXTRA_ARGS=""
        - TEST_TARGET="os_test"
      os: linux
      dist: xenial
      addons:
        apt:
          sources:
          - sourceline: 'ppa:openshot.developers/libopenshot-daily'
          - sourceline: 'ppa:beineri/opt-qt-5.10.0-xenial'
          - sourceline: 'ppa:jon-hedgerows/ffmpeg-backports'
          packages:
          - *ff_common
          - libavcodec57
          - libavdevice57
          - libavfilter6
          - libavformat57
          - libavresample3
          - libavutil55
          - libpostproc54
          - libswresample2
          - libswscale4

    - name: "FFmpeg 2 GCC (Ubuntu 16.04 Xenial)"
      env:
        - BUILD_VERSION=ffmpeg2
        - CMAKE_EXTRA_ARGS=""
        - TEST_TARGET="os_test"
        - BUILD_AUDIO_LIB=1
      os: linux
      dist: xenial
      addons:
        apt:
          sources:
          - sourceline: 'ppa:openshot.developers/libopenshot-daily'
          - sourceline: 'ppa:beineri/opt-qt-5.10.0-xenial'
          packages:
          - *ff_common
          
    - name: "macOS Latest"
      env:
        - BUILD_VERSION=ffmpeg4
        - CMAKE_EXTRA_ARGS="-DOpenShotAudio_ROOT=../../install-x64"
        - TEST_TARGET="test"
      before_install:
        - brew tap jmuncaster/homebrew-header-only # For cppzmq
        - brew install cppzmq
        - brew upgrade cmake
        - git clone https://github.com/OpenShot/libopenshot

before_install:
  - git clone https://github.com/OpenShot/libopenshot

script:
  - if [! -z ${BUILD_AUDIO_LIB}]; then git clone https://github.com/OpenShot/libopenshot-audio; cd libopenshot-audio; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX=../../install-x64 ..; cmake --build .; make install VERBOSE=1; cd ../..; fi
  - mkdir -p libopenshot/build; cd libopenshot/build;
  - cmake -DCMAKE_BUILD_TYPE:STRING="Debug" -DCMAKE_INSTALL_PREFIX=../../install-x64 ${CMAKE_EXTRA_ARGS} ..
  - cmake --build . -v
  - cmake --build ${TEST_TARGET} . -v
  - make install VERBOSE=1
  - cd ..

