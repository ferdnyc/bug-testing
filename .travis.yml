language: cpp
addons:
  apt:
    packages: &1
    - cmake
    - swig
    - libasound2-dev
    - libopenshot-audio-dev
    - libmagick++-dev
    - libunittest++-dev
    - libzmq3-dev
    - qtbase5-dev
    - qtmultimedia5-dev
    - doxygen
    - graphviz
    - curl
    - libfdk-aac-dev
    - libavcodec-dev
    - libavformat-dev
    - libavdevice-dev
    - libavutil-dev
    - libavfilter-dev
    - libswscale-dev
    - libpostproc-dev
    - libavresample-dev
    - libswresample-dev

jobs:
  include:
  - name: FFmpeg 4 GCC (Ubuntu 18.04 Bionic)
    env:
    - BUILD_VERSION=ffmpeg4
    - TEST_TARGET=test
    os: linux
    dist: bionic
    compiler: gcc
    addons:
      apt:
        sources:
        - sourceline: ppa:openshot.developers/libopenshot-daily
        - sourceline: ppa:beineri/opt-qt-5.12.3-bionic
        - sourceline: ppa:jonathonf/ffmpeg-4
        packages:
        - *1
        - qt5-default
        - libjsoncpp-dev
        - libavcodec58
        - libavformat58
        - libavdevice58
        - libavutil56
        - libavfilter7
        - libswscale5
        - libpostproc55
        - libavresample4
        - libswresample3
  - name: FFmpeg 3.4 Clang (Ubuntu 18.04 Bionic)
    env:
    - BUILD_VERSION=clang_ffmpeg34
    - TEST_TARGET=test
    os: linux
    dist: bionic
    compiler: clang
    addons:
      apt:
        sources:
        - sourceline: ppa:openshot.developers/libopenshot-daily
        - sourceline: ppa:beineri/opt-qt-5.12.3-bionic
        packages:
        - *1
        - qt5-default
        - libomp-dev
  - name: macOS Latest
    env:
    - BUILD_VERSION=ffmpeg4
    - TEST_TARGET="test"
    - CMAKE_EXTRA_ARGS="-DENABLE_RUBY=0"
    - Qt5_DIR=/usr/local/opt/qt5/lib/cmake/Qt5
    os: osx
    osx_image: xcode11.3
    compiler: clang
    addons:
      homebrew:
        update: true
        packages:
        - cmake
        - libomp
        - qt
        - imagemagick
        - libvpx
        - x264
        - x265
        - fdk-aac
        - fdk-aac-encoder
        - ffmpeg
        - zeromq
        - swig
        - unittest-cpp
        - rust

before_script:
  - if [ "x${TRAVIS_OS_NAME}" = "xosx" ]; then eval $(brew --env|grep -i cmake); fi
  - if [ "x${TRAVIS_OS_NAME}" = "xosx" ]; then cmake -B build/OpenShotAudio -S libopenshot-audio -DCMAKE_BUILD_TYPE=Debug $(brew diy --verbose --name openshot-audio --version $(sh ./libopenshot-audio/version.sh)); cmake --build build/OpenShotAudio --verbose; cmake --install build/OpenShotAudio --verbose; brew link --verbose openshot-audio; fi
  - if [ "x${TRAVIS_OS_NAME}" = "xosx" ]; then git clone https://github.com/zeromq/cppzmq; cmake -B build/cppzmq -S cppzmq -DCMAKE_BUILD_TYPE=Debug -DENABLE_DRAFTS=0 $(brew diy --verbose --name cppzmq --version $(sh ./cppzmq/version.sh)); cmake --build build/cppzmq; cmake --install build/cppzmq; brew link --verbose cppzmq; fi

script:
  - if [ "x${TRAVIS_OS_NAME}" = "xosx" ]; then echo "${CMAKE_EXTRA_ARGS}"; fi
  - cmake -B build -S . -DCMAKE_BUILD_TYPE=Debug ${CMAKE_EXTRA_ARGS} $( [ "x${TRAVIS_OS_NAME}" = "xosx" ] && $(brew diy --name libopenshot --version $(sh ./version.sh)) || echo "-DCMAKE_INSTALL_PREFIX=build/dist")
  - cmake --build build --verbose
  - cmake --build build --target ${TEST_TARGET}
  - cmake --install build --verbose
  - if [ "x${TRAVIS_OS_NAME}" = "xosx" ]; then brew link libopenshot; fi

after_failure:
  - cat build/CMakeCache.txt
  - if [ "x${TRAVIS_OS_NAME}" = "xosx" ]; then brew config; brew doctor; fi

